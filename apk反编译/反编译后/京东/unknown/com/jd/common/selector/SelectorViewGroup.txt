package com.jd.common.selector;

import java.util.ArrayList;
import java.util.List;

import android.content.Context;
import android.util.AttributeSet;
import android.view.View;
import android.widget.Checkable;
import android.widget.$;

public class Selector$ extends $ implements Checkable {

	private boolean mChecked;
	private List<Integer> mCheckableIds = new ArrayList<Integer>();
	private List<Integer> mEnableIds = new ArrayList<Integer>();
	
    private static final int[] CHECKED_STATE_SET = {
        android.R.attr.state_checked
    };
    
	public Selector$(Context context) {
        super(context);
        onCheckableIds(mCheckableIds);
        onEnableIds(mEnableIds);
    }

    public Selector$(Context context, AttributeSet attrs) {
    	super(context, attrs);
    	onCheckableIds(mCheckableIds);
    	onEnableIds(mEnableIds);
    }
    
    protected void onCheckableIds(List<Integer> subIds) {
    	
    }
    
    protected void onEnableIds(List<Integer> subIds) {
    	
    }
    
    @Override
    protected int[] onCreateDrawableState(int extraSpace) {
        final int[] drawableState = super.onCreateDrawableState(extraSpace + 1);
        if (isChecked()) {
            mergeDrawableStates(drawableState, CHECKED_STATE_SET);
        }
        return drawableState;
    }

	@Override
	public boolean isChecked() {
		return mChecked;
	}

	@Override
	public void setChecked(boolean arg0) {
		mChecked = arg0;
		for(int i = 0; i < mCheckableIds.size(); ++i) {
			Checkable v = (Checkable)findViewById(mCheckableIds.get(i));
			v.setChecked(arg0);
		}
		refreshDrawableState();
	}

	@Override
	public void toggle() {
		mChecked = !mChecked;
	}

	@Override
	public void setEnabled(boolean enabled) {
		super.setEnabled(enabled);
		for(int i = 0; i < mEnableIds.size(); ++i) {
			View v = findViewById(mEnableIds.get(i));
			v.setEnabled(enabled);
		}
		refreshDrawableState();
	}
}
